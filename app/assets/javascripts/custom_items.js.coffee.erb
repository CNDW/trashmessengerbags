# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
types = new Array()
<% ProductType.all.each do |type| %>
types.push [<%= type.id %>, <%= type.product_category_id %>]
<% end %>
models = new Array()
<% ProductModel.all.each do |model| %>
models.push [<%= model.id %>, <%= model.product_type_id %>]
<% end %>

categoryRadio = ".custom_product .category input[type=radio]"
typeRadio = ".custom_product .type input[type=radio]"
modelRadio = ".custom_product .model input[type=radio]"

#button = button to change, parentButton = selected button, itemArray = options for button
radioButtonChange = (button, parentButton, itemArray)->
    $($(button).parent()).hide()
    $(button + ":checked").attr('checked', false)
    value = Number($(parentButton + ":checked").val())
    itemArray.forEach (item)->
        if (item[1] == value)
            $(button + "[value=" + item[0] + "]").show()
            $(button + "[value=" + item[0] + "] + label").show()
            $($(button).parent()).show() if $($(button).parent()).is(":hidden")
        if (item[1] != value)
            $(button + "[value=" + item[0] + "]").hide()
            $(button + "[value=" + item[0] + "] + label").hide()
   
$ ->
    $(categoryRadio).on "click", ->
        $(".custom_product .model").hide()
        radioButtonChange(typeRadio, categoryRadio, types)


$ ->
    $(typeRadio).on "click", ->
        radioButtonChange(modelRadio, typeRadio, models)

$ ->
    $(".custom_product .model").on "click", "input:radio", ->
        #$(this).parents("form").trigger("submit")